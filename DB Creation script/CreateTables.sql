CREATE TABLE PLANS(
	Name			VARCHAR(8),
	StorageCapacity	INTEGER NOT NULL,
	Price			Money	NOT NULL,
	DisableADS		BIT		NOT NULL,
	DataAccess		BIT		NOT NULL,
	CONSTRAINT PK_PLANS PRIMARY KEY (Name),
	CONSTRAINT AK_PLANS UNIQUE (StorageCapacity),
	CONSTRAINT CK_PRICE CHECK (Price >= 0),
	CONSTRAINT CK_STORAGECAP CHECK (StorageCapacity > 0)
)

CREATE TABLE CUSTOMERS (
	Username			VARCHAR(50),
	Password			VARCHAR(50) 	NOT NULL,
	PlanName			VARCHAR(8) 		NOT NULL,
	Email				VARCHAR(255) 	NOT NULL,
	FirstName			VARCHAR(255) 	NOT NULL,
	LastName			VARCHAR(255) 	NOT NULL,
	BirthDate			DATE			NOT NULL,
	JoinDate			DATETIME		NOT NULL,
	CreditCardNumber	VARCHAR(16),
	LastMemeCreatedAt	DATETIME,
	TotalMemes			INTEGER,
	CONSTRAINT PK_CUSTOMERS PRIMARY KEY (Username),
	CONSTRAINT FK_CUSTOMERS_TO_PLAN FOREIGN KEY (PlanName)
		REFERENCES PLANS (Name),
	CONSTRAINT CK_PLANNAME CHECK (PlanName IN ('Free' , 'Pro' , 'Business')),
	CONSTRAINT AK_CUSTOMERS UNIQUE (Email),
	CONSTRAINT CK_EMAIL CHECK (Email LIKE '%@%.%'),
	CONSTRAINT CK_CREDITCARDNUMBER CHECK (CreditCardNumber LIKE '[1-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')
)


CREATE TABLE TEMPLATES (
	TemplateID	INTEGER,
	Width		FLOAT NOT NULL,
	Length		FLOAT NOT NULL,
	CONSTRAINT PK_TEMPLATES PRIMARY KEY(TemplateID),
	CONSTRAINT CK_LENGTH_WIDTH CHECK (Width > 0 AND Length > 0)
)

CREATE TABLE UPLOAD_TEMPLATES (
	UploadTemplateID	INTEGER,
	FormatType			VARCHAR(5),
	CONSTRAINT PK_UPLOADED_TEMPLATE PRIMARY KEY (UploadTemplateID),
	CONSTRAINT FK_TEMPLATE FOREIGN KEY (UploadTemplateID) REFERENCES TEMPLATES (TemplateID),
	CONSTRAINT CK_FORMAT CHECK ( FormatType IN ('JPEG' , 'PNG'))
)

CREATE TABLE STOCK_TEMPLATES (
	StockTemplateID INTEGER,
	UsageCount		INTEGER,
	CONSTRAINT PK_STOCK_TEMPLATE PRIMARY KEY (StockTemplateID),
	CONSTRAINT FK_STOCK_TEMPLATE FOREIGN KEY (StockTemplateID) REFERENCES TEMPLATES(TemplateID)
)

CREATE TABLE MEMES (
	Meme 							INTEGER,
	Username 						VARCHAR(50) NOT NULL,
	TemplateID 						INTEGER 	NOT NULL,
	CreationDT 						DATETIME 	NOT NULL,
	FileSize 						INTEGER 	NOT NULL,
	TotalCustomizationsTextBox		INTEGER,
	TotalCustomizationsImage		INTEGER,
	CONSTRAINT PK_MEMES PRIMARY KEY(Meme),
	CONSTRAINT FK_MEMES_TO_CUSTOMERS FOREIGN KEY (Username) 
		REFERENCES CUSTOMERS(Username),
	CONSTRAINT FK_MEMES_TO_TEMPLATES FOREIGN KEY (TemplateID)
		REFERENCES TEMPLATES(TemplateID),
	CONSTRAINT CK_FILESIZE CHECK (FileSize > 0)
)


CREATE TABLE SHARES (
	ShareDT		DATETIME,
	Meme		INTEGER,
	Destination VARCHAR(30),
	CONSTRAINT PK_SHARES PRIMARY KEY (ShareDT, Meme),
	CONSTRAINT FK_SHARES FOREIGN KEY (Meme)
		REFERENCES MEMES (Meme)
)


CREATE TABLE CUSTOMIZATIONS (
	CustomizationID INTEGER,
	Meme			INTEGER		NOT NULL,
	CenterX			FLOAT		NOT NULL,
	CenterY			FLOAT		NOT NULL,
	LengthSize		FLOAT		NOT NULL,
	WidthSize		FLOAT		NOT NULL,
	CONSTRAINT PK_CUSTOMIZATIONS PRIMARY KEY (CustomizationID, Meme),
	CONSTRAINT FK_CUSTOMIZATIONS FOREIGN KEY (Meme)
		REFERENCES MEMES (Meme),
	CONSTRAINT CK_XY_POSITION CHECK (CenterX > 0 AND CenterY > 0),
	CONSTRAINT CK_SIZE CHECK ( LengthSize > 0 AND WidthSize > 0)
)


CREATE TABLE TEXTBOXES (
	TextboxID	INTEGER,
	Meme		INTEGER		NOT NULL,
	Color		VARCHAR(25) NOT NULL,
	Font		VARCHAR(50) NOT NULL,
	CONSTRAINT PK_TEXTBOXES PRIMARY KEY (TextboxID, Meme),
	CONSTRAINT PK_TEXTBOXES_PARENT FOREIGN KEY (TextboxID, Meme)
		REFERENCES CUSTOMIZATIONS (CustomizationID, Meme),
)


CREATE TABLE IMAGES (
	ImageID INTEGER,
	Meme	INTEGER		NOT NULL,
	Type	VARCHAR(10)	NOT NULL,
	CONSTRAINT PK_IMAGES PRIMARY KEY (ImageID, Meme),
	CONSTRAINT PK_IMAGES_PARENT FOREIGN KEY (ImageID, Meme)
		REFERENCES CUSTOMIZATIONS (CustomizationID, Meme),
	CONSTRAINT CK_IMGTYPE CHECK (Type IN ('Emoji' , 'Sticker'))
)



CREATE TABLE PROPERTIES (
	Meme		INTEGER,
	PlanName	VARCHAR(8),
	WaterMark	BIT NOT NULL,
	CONSTRAINT PK_PROPERTIES PRIMARY KEY (Meme, PlanName),
	CONSTRAINT FK_PROPERTIES_TO_MEMES FOREIGN KEY (Meme)
		REFERENCES MEMES (Meme),
	CONSTRAINT FK_PROPERTIES_TO_PLANS FOREIGN KEY (PlanName)
		REFERENCES PLANS (Name),
	CONSTRAINT CK_PLANNAME2 CHECK (PlanName IN ('Free' , 'Pro' , 'Business'))
)


CREATE TABLE CATEGORIES (
	TemplateID	INTEGER,
	Category	VARCHAR(50),
	CONSTRAINT PK_CATEGORIES PRIMARY KEY (TemplateID, Category),
	CONSTRAINT FK_CATEGORIES_TO_TEMPLATES FOREIGN KEY (TemplateID)
		REFERENCES TEMPLATES (TemplateID),
)

-- CREATING TABLE FOR ARCHIVE_MEMES
CREATE TABLE ARCHIVE_MEMES (
	Meme 							INTEGER,
	Username 						VARCHAR(50) 	NOT NULL,
	TemplateID 						INTEGER 		NOT NULL,
	CreationDT 						DATETIME 		NOT NULL,
	FileSize 						INTEGER 		NOT NULL,
	TotalCustomizationsTextBox 		INTEGER,
	TotalCustomizationsImage 		INTEGER,
	DeleteDT						DATETIME, 
	CONSTRAINT PK_ARCHIVE_MEMES PRIMARY KEY(Meme),
	CONSTRAINT FK_ARCHIVE_MEMES_TO_TEMPLATES FOREIGN KEY (TemplateID)
		REFERENCES TEMPLATES(TemplateID),
)

-- CREATING TABLE FOR ARCHIVE_CUSTOMERS
CREATE TABLE ARCHIVE_CUSTOMERS (
	Username 	VARCHAR(50),
	LeaveDT 	DATETIME,
	PlanName 	VARCHAR(8)		NOT NULL,
	Email 		VARCHAR(255) 	NOT NULL,
	FirstName 	VARCHAR(255) 	NOT NULL,
	LastName 	VARCHAR(255)	NOT NULL,
	BirthDate 	DATE 			NOT NULL,
	JoinDate 	DATETIME 		NOT NULL,
	TotalMemes 	INTEGER,
	CONSTRAINT PK_ARCHIVE_CUSTOMERS PRIMARY KEY (Username, LeaveDT) 
	-- WHY ADD LEAVEDATE TO PRIMARY KEY?: once a customer deletes his account his username is back up for grabs:
	-- in a situation where a new customer that used a username that was used in the past decides to delete his account as well - leave date will ensure no duplicates
)

-- CREATING TABLE FOR ARCHIVE_SHARES
CREATE TABLE ARCHIVE_SHARES (
	ShareDT		DATETIME,
	Meme		INTEGER,
	Destination VARCHAR(30),
	CONSTRAINT PK_D_SHARES PRIMARY KEY (ShareDT, Meme)
)


CREATE TABLE LIKES (
	LikeDT		DATETIME DEFAULT CURRENT_TIMESTAMP,
	Username	VARCHAR(50),
	ShareDT		DATETIME,
	Meme		INTEGER,
	LikeType	VARCHAR(10),
	CONSTRAINT PK_LIKES PRIMARY KEY (LikeDT, Username, ShareDT, Meme),
	CONSTRAINT FK_Customer_Likes FOREIGN KEY (Username)
		REFERENCES CUSTOMERS (Username),
	CONSTRAINT FK_Share_Likes FOREIGN KEY (ShareDT, Meme)
		REFERENCES SHARES (ShareDT, Meme),
	CONSTRAINT Single_Like_Per_Customer_Per_Meme UNIQUE (Username, Meme)
)

CREATE TABLE ARCHIVE_LIKES (
	LikeDT		DATETIME DEFAULT CURRENT_TIMESTAMP,
	Username	VARCHAR(50),
	ShareDT		DATETIME,
	Meme		INTEGER,
	LikeType	VARCHAR(10),
	CONSTRAINT PK_ARCHIVE_LIKES PRIMARY KEY (LikeDT, Username, ShareDT, Meme)
)

CREATE TABLE HASHTAGS (
	Meme	INTEGER,
	TagName VARCHAR(50)
	CONSTRAINT PK_HASHTAGS PRIMARY KEY (Meme, TagName),
)


CREATE TABLE ARCHIVE_HASHTAGS (
	Meme	INTEGER,
	TagName VARCHAR(50)
	CONSTRAINT PK_ARCHIVE_HASHTAGS PRIMARY KEY (Meme, TagName),
)

-- for Search engine in assignment 4
CREATE TABLE SEARCHES (
	Username			VARCHAR(50),
	SearchDT			DATETIME,
	TemplateID			INTEGER,
	Category			VARCHAR(50),
	MinUsed				INTEGER,
	SharedOn			VARCHAR(50),
	OperationSeconds	REAL,
	CONSTRAINT PK_SEARCHES PRIMARY KEY (Username, SearchDT),
)
